import {useState, useEffect, useMemo} from 'react';
import links from '../links.json';
import "./Maths.scss";

const Status = ({list}) => {
    if (list === []) {
        return <div>Fetching data...</div>;
    }
    
    return <div>"Something went terribly wrong while fetching data :( "</div>;
};

const Progress = ({chaptersTotal, chaptersFinished}) => {

    const colors = useMemo(() => {
        let ret = [];
        for (let i = 0; i < chaptersTotal; i++) {

            let deg = (i - chaptersFinished);
            if (deg >= 1)
                deg = 1;
            if (deg <= 0)
                deg = 0;
            deg = Math.floor(deg * 255);
            let rdeg = Number(255 - deg).toString(16);
            deg = Number(deg).toString(16);
            ret.push("#" + deg + deg + rdeg);
        };
        // debugger;
        return ret;
    }, [chaptersTotal, chaptersFinished]);
    
    return <div className="progress">
             {
                 colors.map((i, pos) => 
                     <div className="progressTile"style={{color: i}}>
                     </div>
                 )
             }
           </div>;
};

const Course = ({name, author, edition, status, note, link, progress}) => {
    return <div className="course">
             <div className="upper">
               <h2 className="name">
                 {name}
               </h2>
               <span>
                 <h3 className="name">
                   {`by ${author}`}
                 </h3>
                 <p>{`(${edition} edition)`}</p>
               </span>
             </div>

             <div className="status">
               {status}
             </div>
             <a href={link}>Solutions</a>
             {progress && <Progress
                            chaptersTotal={progress.total_chapters}
                            chaptersFinished={progress.finished_chapters}
                          />}
           </div>;
};

const CoursesList = ({list, status}) => {

    const coursesList = useMemo(() => {
        return list.filter(i => i.status === status);
    }, [list]);
    
    return <div className="courses_list">
             {coursesList?.map((i, pos) =>
                 <div className="course" key={pos}>
                   <div>
                     <Course
                       name={i.name}
                       author={i.author}
                       edition={i.edition}
                       status={i.status}
                       note={i.note}
                       link={i.link}
                       progress={i.progress}
                     />
                   </div>
                 </div>
             )}
           </div>;
};

const AllCourses = ({list}) => {
    return (
        <div>
          <CoursesList list={list} status={"finished"}/>
          <CoursesList list={list} status={"in_progress"}/>
          <CoursesList list={list} status={"in_hiatus"}/>
        </div>
    );
};

const Maths = () => {

    const [list, setList] = useState([]);

    useEffect(() => {
        fetch(links.exercises_progress)
            .then((response) => response.json())
            .then((json) => {
                setList(json);
            })
            .catch((err) => {
                setList(null);
            });
    }, []);
    
    return <div>
             <h1>Gene's doing maths (and CS related things)</h1>
             <p>
               When I've got free time I usualy do maths (or something CS-related).
               My studies are partitioned into courses, and each course is based on a book.
               Each course is either finished, in progress, or in a semi-permanent hiatus. 
               Solutions for (some of) the exercies in the books are scrupulously written down, and presented for your viewing pleasure.
             </p>
             {
                 Array.isArray(list) && list.length > 0 ?
                     <AllCourses list={list}/>: <Status list={list}/>
             }
           </div>
    ;
};

export default Maths;
